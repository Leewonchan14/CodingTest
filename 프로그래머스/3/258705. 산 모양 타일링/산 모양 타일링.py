"""
1. 아이디어
    - 위에 붙은 정삼각형을 기준으로 사다리꼴을 나누어 각 사다리꼴의 경우의수를 곱한뒤 합을 구한다.
    - n = 2, [1, 1]일때 
        세로 다이아몬드가 왼쪽 하나일때 +
        세로 다이아몬드가 오른쪽 하나일때 +
        세로 다이아몬드가 왼쪽, 오른쪽 두개일때 +
        세로 다이아몬드가 하나도 없을때
        
2. 시간 복잡도
    - 2^n 만큼 실행된다.
    - 2**1000000 == (10 ** 3) ** 100000 == 10**5 * 10 ** 3  == 10 ** 8
    - 가능
    
3. 자료구조
    - 
"""

dp = []


def solution(n, tops):
    if tops[0] == 1:
        dp.append([3, 4])
    else:
        dp.append([2, 3])

    for i in range(1, n):
        if tops[i] == 1:
            a = dp[-1][1] * 2 + dp[-1][0]
            b = dp[-1][1] * 3 + dp[-1][0]
            dp.append([a % 10007, b % 10007])
        else:
            a = dp[-1][0] + dp[-1][1]
            b = dp[-1][1] * 2 + dp[-1][0]
            dp.append([a % 10007, b % 10007])

    return dp[-1][1]

